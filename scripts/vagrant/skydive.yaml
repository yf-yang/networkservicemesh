apiVersion: v1
kind: Service
metadata:
  name: skydive-analyzer
  labels:
    app: skydive-analyzer
spec:
  type: NodePort
  ports:
    - port: 8082
      name: api
    - port: 8082
      name: protobuf
      protocol: UDP
    - port: 12379
      name: etcd
    - port: 12380
      name: etcd-cluster
  selector:
    app: skydive
    tier: analyzer
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: skydive-analyzer
  name: skydive-analyzer-config
data:
  SKYDIVE_ANALYZER_FLOW_BACKEND: memory
  SKYDIVE_ANALYZER_TOPOLOGY_BACKEND: memory
  SKYDIVE_LOGGING_LEVEL: DEBUG
  SKYDIVE_ETCD_LISTEN: 0.0.0.0:12379
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: skydive-agent
  name: skydive-agent-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: skydive-analyzer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: skydive
        tier: analyzer
    spec:
      containers:
        - name: skydive-analyzer
          image: skydive/skydive:devel
          args:
            - analyzer
            - --listen=0.0.0.0:8082
          ports:
            - containerPort: 8082
            - containerPort: 8082
              protocol: UDP
            - containerPort: 12379
            - containerPort: 12380
          envFrom:
            - configMapRef:
                name: skydive-analyzer-config
          livenessProbe:
            httpGet:
              port: 8082
              path: /api/status
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: skydive-agent
spec:
  template:
    metadata:
      labels:
        app: skydive
        tier: agent
    spec:
      hostNetwork: true
      hostPID: true
      containers:
        - name: skydive-agent
          image: skydive/skydive:devel
          args:
            - agent
          ports:
            - containerPort: 8081
          env:
            - name: SKYDIVE_ANALYZERS
              value: "$(SKYDIVE_ANALYZER_SERVICE_HOST):$(SKYDIVE_ANALYZER_SERVICE_PORT_API)"
          envFrom:
            - configMapRef:
                name: skydive-agent-config
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker
              mountPath: /var/run/docker.sock
            - name: run
              mountPath: /host/run
            - name: ovsdb
              mountPath: /var/run/openvswitch/db.sock
      volumes:
        - name: docker
          hostPath:
            path: /var/run/docker.sock
        - name: run
          hostPath:
            path: /var/run/netns
        - name: ovsdb
          hostPath:
            path: /var/run/openvswitch/db.sock
