// Copyright 2018 Red Hat, Inc.
// Copyright (c) 2018 Cisco and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This contains the core Network Service Mesh API definitions for external
// consumption via gRPC protobufs.

syntax = "proto3";

package remote.connection;
option go_package = "connection";

message Mechanism {
    MechanismType type = 1;
    map<string,string> parameters = 2;
}

enum MechanismType {
    NONE = 0;
    VXLAN = 1;
    VXLAN_GPE = 2;
    GRE = 3;
    SRV6 = 4;
    MPLSoEthernet = 5;
    MPLSoGRE = 6;
    MPLSoUDP = 7;
}

message Connection {
    string id = 1;
    string network_service = 2;
    Mechanism mechanism = 3;
    map<string,string> context = 4;
    map<string,string> labels = 5;
    string source_network_service_manager_name = 6;
    string destination_network_service_manager_name = 7;
    string network_service_endpoint_name = 8;
}

enum ConnectionEventType {
    INITIAL_STATE_TRANSFER = 0;
    UPDATE = 1;
    DELETE = 2;
}

message ConnectionEvent {
    ConnectionEventType type = 1;
    map<string,Connection> connections = 2;
}

message MonitorScopeSelector {
    string network_service_manager_name = 1;
}

service MonitorConnection {
    rpc MonitorConnections(MonitorScopeSelector) returns (stream ConnectionEvent);
}